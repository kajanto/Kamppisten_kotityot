package KamppistenKotityotKotityot;

import java.io.PrintStream;

/**
 * Luokka, joka hallitsee yksittäisen kotityöhön liittyviä asioita. Kotityö pitää yllä omaa nimeään, sekä sitä kuka
 * on seuraavana vuorossa ja enintään kolmea edellistä kertaa. Vuoron arvona on -1 kun silloista kertaa ei ole allokoitu
 * kenellekkään.
 * @author Tomi Nyyssönen & Juho Kajanto
 * @version 21.3.2016 Aloitus
 * @version 28.3.2016 Lisättiin muodostajat ja kaikki aliohjelmat
 *
 */
public class Kotityo {

    private String kotityonNimi;
    private int seuraavanaVuorossa = -1;
    private int edellinenKerta = -1;
    private int sitaEdeltava = -1;
    private int toistaEdeltava = -1;

    
    
    /**
     * Muodostaja kun kaikki edelliset kerrat tiedetään.
     * @param kotityonNimi Kotityön nimi
     * @param seuraavanaVuorossa seuraavana vuorossa olevan asukkaan id 
     * @param edellinenKerta edeltävän vuorossa olevan asukkaan id
     * @param sitaEdeltava sitä edeltävän vuorossa olevan asukkaan id
     * @param toistaEdeltava toista edeltävän vuorossa olevan asukkaan id
     */
    public Kotityo(String kotityonNimi, int seuraavanaVuorossa, int edellinenKerta, int sitaEdeltava, int toistaEdeltava) {
        this.kotityonNimi = kotityonNimi;
        this.seuraavanaVuorossa = seuraavanaVuorossa;
        this.edellinenKerta = edellinenKerta;
        this.sitaEdeltava = sitaEdeltava;
        this.toistaEdeltava = toistaEdeltava;
    }

    
    /**
     * Muodostaja kun kaikki paitsi toistaEdeltava tiedetään.
     * @param kotityonNimi Kotityön nimi
     * @param seuraavanaVuorossa seuraavana vuorossa olevan asukkaan id 
     * @param edellinenKerta edeltävän vuorossa olevan asukkaan id
     * @param sitaEdeltava sitä edeltävän vuorossa olevan asukkaan id
     */
    public Kotityo(String kotityonNimi, int seuraavanaVuorossa, int edellinenKerta, int sitaEdeltava) {
        this.kotityonNimi = kotityonNimi;
        this.seuraavanaVuorossa = seuraavanaVuorossa;
        this.edellinenKerta = edellinenKerta;
        this.sitaEdeltava = sitaEdeltava;
    }

    
    /**
     * Muodostaja kun kaikki paitsi sitaEdeltava ja toistaEdeltava tiedetään.
     * @param kotityonNimi Kotityön nimi
     * @param seuraavanaVuorossa seuraavana vuorossa olevan asukkaan id 
     * @param edellinenKerta edeltävän vuorossa olevan asukkaan id
     */
    public Kotityo(String kotityonNimi, int seuraavanaVuorossa, int edellinenKerta) {
        this.kotityonNimi = kotityonNimi;
        this.seuraavanaVuorossa = seuraavanaVuorossa;
        this.edellinenKerta = edellinenKerta;
    }

    
    /**
     * Muodostaja kun kaikki paitsi edellinenKerta, sitaEdeltava ja toistaEdeltava tiedetään.
     * @param kotityonNimi Kotityön nimi
     * @param seuraavanaVuorossa seuraavana vuorossa olevan asukkaan id
     */
    public Kotityo(String kotityonNimi, int seuraavanaVuorossa) {
        this.kotityonNimi = kotityonNimi;
        this.seuraavanaVuorossa = seuraavanaVuorossa;
    }
    
    
    /**
     * Oletusmuodostaja, kun luodaan kotitöitä.
     * @param kotityonNimi kotityön nimi
     */
    public Kotityo(String kotityonNimi) {
        this.kotityonNimi = kotityonNimi;
    }
    
    
    /**
     * Palauttaa kotityön nimen
     * @return kotityön nimi
     * @example
     * <pre name="test">
     * String nimi = "Vessapaperin hankinta";
     * Kotityo kt1 = new Kotityo(nimi);
     * kt1.getKotityonNimi() === "Vessapaperin hankinta";
     * </pre>
     */
    public String getKotityonNimi() {
        return kotityonNimi;
    }
    
    
    
    /**
     * Palauttaa kuka on seuraavana vuorossa.
     * @return seuraavana vuorossa olevan asukkaan id
     * @example
     * <pre name="test">
     * Kotityo kt1 = new Kotityo("Tiskaus", 1, 4, 3, 2);
     * kt1.getSeuraavanaVuorossa() === 1;
     * Kotityo kt2 = new Kotityo("Tiskaus");
     * kt2.getSeuraavanaVuorossa() === -1;
     * </pre>
     */
    public int getSeuraavanaVuorossa() {
        return seuraavanaVuorossa;
    }
    
    
    /**
     * Palauttaa kuka oli edellisen kerran vuorossa.
     * @return edellisenä vuorossa olleen asukkaan id
     * @example
     * <pre name="test">
     * Kotityo kt1 = new Kotityo("Roskien vienti", 4, 2, 4, 1);
     * kt1.getEdellinenKerta() === 2;
     * Kotityo kt2 = new Kotityo("Roskien vienti", 4);
     * kt2.getEdellinenKerta() === -1;
     * </pre>
     */
    public int getEdellinenKerta() {
        return edellinenKerta;
    }    
    
    
    /**
     * Palauttaa kuka oli sitä edeltävän kerran vuorossa.
     * @return sitä edeltävänä olleen asukkaan id
     * @example
     * <pre name="test">
     * Kotityo kt1 = new Kotityo("WC:n pesu", 1, 2, 3, 4);
     * kt1.getSitaEdeltava() === 3;
     * Kotityo kt2 = new Kotityo("WC:n pesu", 1, 2);
     * kt2.getSitaEdeltava() === -1;
     * </pre>
     */
    public int getSitaEdeltava() {
        return sitaEdeltava;
    }
    
    
    /**
     * Palauttaa kuka oli toista edeltävän kerran vuorossa.
     * @return toista edeltävänä olleen asukkaan id
     * @example
     * <pre name="test">
     * Kotityo kt1 = new Kotityo("imurointi", 1, 3, 3, 2);
     * kt1.getToistaEdeltava() === 2;
     * Kotityo kt2 = new Kotityo("imurointi", 1, 3, 3);
     * kt2.getToistaEdeltava() === -1;
     * </pre>
     */
    public int getToistaEdeltava() {
        return toistaEdeltava;
    }
    
    
    /**
     * Asettaa kotityölle tekijän. Jos työllä on ollut aikaisempi tekijä, siirtää aikaisempia
     * tekijöitä taaksepäin, siten että 
     * 
     * seuraavanaVuorossa -> edellinenKerta
     * edellinenKerta -> sitaEdeltava
     * sitaEdeltava -> toistaEdeltava
     * 
     * Toista edeltävästä kerrasta eteenpäin vuoroja ei enää pidetä yllä
     * @param tekijanId seuraavan tekijän id
     * @example
     * <pre name="test">
     * Kotityo kt1 = new Kotityo("Imurointi");
     * kt1.asetaTekija(1);
     * kt1.getSeuraavanaVuorossa() === 1;
     * kt1.asetaTekija(3);
     * kt1.getSeuraavanaVuorossa() === 3;
     * kt1.getEdellinenKerta() === 1;
     * kt1.asetaTekija(6);
     * kt1.getSeuraavanaVuorossa() === 6;
     * kt1.getEdellinenKerta() === 3;
     * kt1.getSitaEdeltava() === 1;
     * kt1.asetaTekija(4);
     * kt1.getSeuraavanaVuorossa() === 4;
     * kt1.getEdellinenKerta() === 6;
     * kt1.getSitaEdeltava() === 3;
     * kt1.getToistaEdeltava() === 1;
     * kt1.asetaTekija(2);
     * kt1.getSeuraavanaVuorossa() === 2;
     * kt1.getEdellinenKerta() === 4;
     * kt1.getSitaEdeltava() === 6;
     * kt1.getToistaEdeltava() === 3;
     * </pre>
     */
    public void asetaTekija(int tekijanId) {
        if (sitaEdeltava != -1) toistaEdeltava = sitaEdeltava;
        if (edellinenKerta != -1) sitaEdeltava = edellinenKerta;
        if (seuraavanaVuorossa != -1) edellinenKerta = seuraavanaVuorossa;
        seuraavanaVuorossa = tekijanId;
    }
    
    
    /**
     * Kuinka Kotityo-olio muutetaan String tyyppiseksi.
     * @example
     * <pre name="test">
     * Kotityo kt1 = new Kotityo("Imurointi", 1, 3, 2, 1);
     * kt1.toString() === "Imurointi, seuraavana vuorossa: 1, edellisenä vuorossa: 3, sitä edeltävän kerran: 2 ja sitä edeltävän kerran: 1";
     * </pre>
     */
    @Override
    public String toString() {
        return kotityonNimi + ", seuraavana vuorossa: " + this.seuraavanaVuorossa + 
                ", edellisenä vuorossa: " + this.edellinenKerta + ", sitä edeltävän kerran: "
                + this.sitaEdeltava + " ja sitä edeltävän kerran: " + this.toistaEdeltava;
    }
    
    
    
    /**
     * Tulostaa Kotityo-olion haluttuun tietovirtaan.
     * @param out Tietovirta johon tulostetaan.
     */
    public void tulosta(PrintStream out) {
        out.println(this);
    }
    
    
    /**
     * @param args ei käytössä
     */
    public static void main(String[] args) {
        Kotityo imurointi = new Kotityo("Imurointi");
        imurointi.tulosta(System.out);
        imurointi.asetaTekija(2);
        imurointi.tulosta(System.out);
        imurointi.asetaTekija(4);
        imurointi.tulosta(System.out);
        imurointi.asetaTekija(1);
        imurointi.tulosta(System.out);
        imurointi.asetaTekija(3);
        imurointi.tulosta(System.out);
        imurointi.asetaTekija(3);
        imurointi.tulosta(System.out);
    }

}
